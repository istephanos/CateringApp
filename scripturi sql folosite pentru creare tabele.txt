//TABEL CLIENTI

CREATE SEQUENCE clienti_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE Clienti (
    idClient NUMBER(10) NOT NULL PRIMARY KEY,
    numeClient VARCHAR2(50) NOT NULL,
    prenumeClient VARCHAR2(50) NOT NULL,
    telefonClient VARCHAR2(20) NOT NULL,
    emailClient VARCHAR2(50) NOT NULL
);

CREATE TRIGGER clienti_trigger
BEFORE INSERT ON Clienti
FOR EACH ROW
BEGIN
    SELECT clienti_seq.NEXTVAL INTO :new.idClient FROM dual;
END;
/


//TABEL PRODUSE

CREATE TABLE PRODUSE (
    Id_Produs NUMBER NOT NULL PRIMARY KEY,
    denumire_Produs VARCHAR2(50) NOT NULL,
    pret_Produs NUMBER NOT NULL,
    descriere_Produs VARCHAR2(50) NOT NULL
);

CREATE SEQUENCE produs_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER produse_trigger
BEFORE INSERT ON PRODUSE
FOR EACH ROW
BEGIN
    SELECT produs_seq.NEXTVAL INTO :new.Id_Produs FROM dual;
END;
/

//Eveniment






//ComandaProdus

CREATE TABLE COMANDA_PRODUS (
    ID_EVENIMENT NUMBER NOT NULL,
    ID_PRODUS NUMBER NOT NULL,
    PRIMARY KEY (ID_EVENIMENT, ID_PRODUS),
    FOREIGN KEY (ID_EVENIMENT) REFERENCES EVENIMENTE(ID_EVENIMENT),
    FOREIGN KEY (ID_PRODUS) REFERENCES PRODUSE(ID_PRODUS)
);

